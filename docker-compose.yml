version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: newmetalbums-backend
    ports:
      - "8000:8000"
    volumes:
      # Persist database and covers
      - ./data:/app/data
      - ./covers:/app/covers
      # Mount source code for development (optional)
      - ./web_server.py:/app/web_server.py
      - ./db_manager.py:/app/db_manager.py
      - ./scraper.py:/app/scraper.py
      - ./models.py:/app/models.py
      - ./config.py:/app/config.py
    environment:
      - PYTHONUNBUFFERED=1
      - ENVIRONMENT=production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/api/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: newmetalbums-frontend
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=http://localhost:8000

  # Development override service (optional)
  backend-dev:
    profiles: ["dev"]
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: newmetalbums-backend-dev
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./covers:/app/covers
      - .:/app
    environment:
      - PYTHONUNBUFFERED=1
      - ENVIRONMENT=development
    command: ["python", "-m", "uvicorn", "web_server:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    restart: unless-stopped

volumes:
  data:
  covers:
